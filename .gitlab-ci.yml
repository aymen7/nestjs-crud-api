stages:
  - test
  - build 
  - package
  - deploy

default:
  image: node:latest
  before_script:
    - npm install
  after_script:
    - echo "success"
  cache:
    paths:
      - node_modules/

test:
  stage: test
  environment:
    name: test
  script:
    - npm run test
    - npm run test:e2e
  only:
    - tags
    - dev
    - master
  coverage: '/^All files\s+\|\s+\d+\.*\d*\s+\|\s*(\d+\.*\d*)/'

build:
  stage: build
  environment:
    name: build
  script:
    - npm run build
  artifacts:
    paths:
      - ./dist/
      - ./package.json
  only:
    - tags
    - dev
    - master


package:
  image: docker:latest
  services:
    - docker:dind
  stage: package
  environment:
    name: package
    #url: http://139.59.154.151:8080
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - docker build -t registry.gitlab.com/hd-consulting/ib3at-api .
    - docker push registry.gitlab.com/hd-consulting/ib3at-api
  only:
    - tags
    - dev
    - master

deploy:
  stage: deploy
  environment:
    name: production
    #url: http://139.59.154.151:8080
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    #- ssh -i $SSH_PRIVATE_KEY root@$DOMAINE
    - ls
    - cp $SSH_PRIVATE_KEY ~/.ssh/hdc_ed25519
    - chmod 600 ~/.ssh/hdc_ed25519
    - ssh-keyscan -t ed25519 $DOMAINE >> ~/.ssh/known_hosts
    - ssh-add
  script:
    - scp ./docker-compose.yml $USERNAME@$DOMAINE:docker-compose.yml
    - ssh $USERNAME@$DOMAINE "sudo docker stack deploy -c docker-compose.yml --with-registry-auth ib3at"
  only:
    - tags
    - dev
    - master



    
